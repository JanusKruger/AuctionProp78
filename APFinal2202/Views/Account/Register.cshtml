@using APFinal2202.Enums
@using APFinal2202.Helpers
@model APFinal2202.ViewModels.Account.RegisterViewModel
@{
    IList<SelectListItem> GetList<T>()
    {
        var names = Enum.GetNames(typeof(T));
        return names.Select(name => new SelectListItem { Text = name.Humanize(), Value = name.Humanize() }).ToList();
    }

    ViewBag.Title = "Register";
}

<main>
    <div class="px-3">
        <div class="theme-container">
            <div class="row center-xs middle-xs my-5">
                <div class="mdc-card p-3 p-relative mw-500px">
                    <div class="column center-xs middle-xs text-center">
                        <h1 class="uppercase">Register</h1>
                        <a href="@Url.Action("Login", "Account")" class="mdc-button mdc-ripple-surface mdc-ripple-surface--accent accent-color normal w-100">
                            Already have an account? Sign in!
                        </a>
                    </div>
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <hr />
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="mdc-select mdc-select--outlined mdc-select--with-leading-icon mt-3 custom-field">
                            <div class="mdc-select__anchor w-100">
                                <i class="material-icons mdc-select__icon pt-1">group</i>
                                <i class="mdc-select__dropdown-icon"></i>
                                <div class="mdc-select__selected-text"></div>
                                <div class="mdc-notched-outline">
                                    <div class="mdc-notched-outline__leading"></div>
                                    <div class="mdc-notched-outline__notch">
                                        @Html.LabelFor(m => m.UserType, new { @class = "mdc-floating-label" })
                                    </div>
                                    <div class="mdc-notched-outline__trailing"></div>
                                </div>
                            </div>
                            <div class="mdc-select__menu mdc-menu mdc-menu-surface">
                                <select id="@Html.IdFor(m => m.UserType)" class="mdc-list" name="@Html.NameFor(m => m.UserType)">
                                    @foreach (var option in GetList<UserType>())
                                    {
                                        <option class="mdc-list-item" value="@option.Value" @(option.Selected ? "class=\"mdc-list-item mdc-list-item--selected\"" : string.Empty)>@option.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon w-100 mt-3 custom-field ">
                            <i class="material-icons mdc-text-field__icon text-muted">person</i>
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.FirstName, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon w-100 mt-3 custom-field ">
                            <i class="material-icons mdc-text-field__icon text-muted">person</i>
                            @Html.TextBoxFor(m => m.LastName, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.LastName, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon w-100 mt-3 custom-field ">
                            <i class="material-icons mdc-text-field__icon text-muted">person</i>
                            @Html.TextBoxFor(m => m.NationalIdentificationNumber, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.NationalIdentificationNumber, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon w-100 mt-3 custom-field ">
                            <i class="material-icons mdc-text-field__icon text-muted">phone</i>
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon w-100 mt-3 custom-field ">
                            <i class="material-icons mdc-text-field__icon text-muted">person</i>
                            @Html.TextBoxFor(m => m.Username, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.Username, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon w-100 mt-3 custom-field ">
                            <i class="material-icons mdc-text-field__icon text-muted">email</i>
                            @Html.TextBoxFor(m => m.Email, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.Email, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon mdc-text-field--with-trailing-icon w-100 custom-field mt-4 custom-field">
                            <i class="material-icons mdc-text-field__icon text-muted">lock</i>
                            <i class="material-icons mdc-text-field__icon text-muted password-toggle" tabindex="1">visibility_off</i>
                            @Html.PasswordFor(m => m.Password, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.Password, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon mdc-text-field--with-trailing-icon w-100 custom-field mt-4 custom-field">
                            <i class="material-icons mdc-text-field__icon text-muted">lock</i>
                            <i class="material-icons mdc-text-field__icon text-muted password-toggle" tabindex="1">visibility_off</i>
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "mdc-text-field__input" })
                            <div class="mdc-notched-outline">
                                <div class="mdc-notched-outline__leading"></div>
                                <div class="mdc-notched-outline__notch">
                                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "mdc-floating-label" })
                                </div>
                                <div class="mdc-notched-outline__trailing"></div>
                            </div>
                        </div>
                        <div class="mdc-form-field mt-3 w-100">
                            <div class="mdc-checkbox">
                                @Html.CheckBoxFor(m => m.ReceiveNewsletter, new { type = "checkbox", @class = "mdc-checkbox__native-control", id = "keep" })
                                <div class="mdc-checkbox__background">
                                    <svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24">
                                        <path class="mdc-checkbox__checkmark-path" fill="none" d="M1.73,12.91 8.1,19.28 22.79,4.59" />
                                    </svg>
                                    <div class="mdc-checkbox__mixedmark"></div>
                                </div>
                                <div class="mdc-checkbox__ripple"></div>
                            </div>
                            @Html.LabelFor(m => m.ReceiveNewsletter, new { @for = "keep", @class = "text-muted fw-500" })
                        </div>
                        <div class="text-center mt-2">
                            <button class="mdc-button mdc-button--raised bg-accent" type="submit">
                                <span class="mdc-button__ripple"></span>
                                <span class="mdc-button__label">Create an Account</span>
                            </button>
                        </div>
                    }
                    <div class="row my-4 px-3 p-relative">
                        <div class="divider w-100"></div>
                    </div>
                    <div class="row center-xs middle-xs">
                        <small>By clicking the "Create an Account" button you agree with our</small>
                        <a href="@Url.Action("Terms", "Home")" class="mdc-button normal">
                            <span class="mdc-button__ripple"></span>
                            <span class="mdc-button__label">Terms and conditions</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
